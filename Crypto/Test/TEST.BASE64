*
* Test base64 encoding!
*
EQU CR TO CHAR(13), LF TO CHAR(10)
EQU MAX.CHR TO 255  ;* udt/uv
*r83 EQU MAX.CHR TO 254
*
DIM T(2, 4)
T(1, 1) = 'ABCDEFG'  ; T(2, 1) = 'QUJDREVGRw=='
T(1, 2) = 'ABCDEFGH' ; T(2, 2) = 'QUJDREVGR0g='
T(1, 3) = 'ABCDEFGHI'; T(2, 3) = 'QUJDREVGR0hJ'
T(1, 4) = ''         ; T(2, 4) = ''
*
* Do simple 'sanity' tests
CRLF = CR:LF
FOR I = 1 TO 4
   BUF = T(1, I)
   CALL BASE64(0, BUF, OUTBUF, ERR)
   IF ERR THEN CRT 'ENCODE ERROR CODE ':ERR ; STOP
   IF OUTBUF # T(2, I):CRLF THEN
      CRT 'CODED STRING = ':BUF
      CRT 'BASE64 VALUE = ':OUTBUF:' - EXPECTED = ':T(2, I)
      STOP
   END
   CALL BASE64(1, OUTBUF, NUBUF, ERR)
   IF ERR THEN CRT 'DECODE ERROR CODE ':ERR ; STOP
   IF BUF # NUBUF THEN
      CRT 'CODED STRING = ':BUF
      CRT 'BASE64 VALUE = ':OUTBUF:' - EXPECTED = ':T(2, I)
      CRT 'THIS DECODED = ':NUBUF
      STOP
   END
NEXT I
* More tests
BUF = ''
FOR I = 0 TO MAX.CHR
  BUF = BUF:CHAR(I)
NEXT I
FOR I = MAX.CHR TO 0 STEP -1
  BUF = BUF:CHAR(I)
NEXT I
BUF = STR(BUF, 100)
CALL BASE64(0, BUF, OUTBUF, ERR)
IF ERR THEN CRT 'ENCODE ERROR CODE ':ERR ; STOP
CALL BASE64(1, OUTBUF, NUBUF, ERR)
IF BUF # NUBUF THEN
   CRT 'ERROR ENCODE/DECODE CHARS(0)-CHAR(255)!'
   STOP
END
*
CRT 'Base64 tests ok!...'
*
END
