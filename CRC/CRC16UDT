SUBROUTINE CRC16UDT(MODE, SVAL, CRC)
* Code for CRC-16 generation for UniData   (dmm)
* ******************************************************* *
* ******************************************************* *
* Function to generate a CCITT 16 bit CRC for a string.   *
* The result is compatible with the intrinsic uniVerse    *
* CHECKSUM() function.                                    *
* Based on code from 'C Programmers Guide to Serial       *
* Communications' by Joe Campbell - Chapter 19            *
*                                                         *
* Passed: MODE   - 2 = initialise (load) tables           *
*                  1 = calculate CRC for passed string.   *
*         SVAL   - If MODE = 1, then string to generate   *
*                  the CRC value for.                     *
* Return:  CRC   - if MODE = 1, then calculated CRC       *
*                  value for string passed in SVAL.       *
*                  Return CRC as 4 digit hex string.      *
*                                                         *
* Eg: The string '123456789' returns CRC value 0x31C3     *
*     or, a string made from all chars 0..255 would       *
*     generate a CRC value of 0x7E55                      *
* ******************************************************* *
* ******************************************************* *
*
     COMMON /U$CRC16/ H(256), L(256)
     *
     ON MODE GOSUB 2000, 1000
     RETURN
*
* *********************************************************** *
* Initialise the tables used for CRC generation. Using tables *
* of pre-computed values makes CRC generation faster.         *
* *********************************************************** *
1000*
     * 'H'igh byte values!
     H(1) = 0;    H(2) = 16;   H(3) = 32;   H(4) = 48;   H(5) = 64
     H(6) = 80;   H(7) = 96;   H(8) = 112;  H(9) = 129;  H(10) = 145
     H(11) = 161; H(12) = 177; H(13) = 193; H(14) = 209; H(15) = 225
     H(16) = 241; H(17) = 18;  H(18) = 2;   H(19) = 50;  H(20) = 34
     H(21) = 82;  H(22) = 66;  H(23) = 114; H(24) = 98;  H(25) = 147
     H(26) = 131; H(27) = 179; H(28) = 163; H(29) = 211; H(30) = 195
     H(31) = 243; H(32) = 227; H(33) = 36;  H(34) = 52;  H(35) = 4
     H(36) = 20;  H(37) = 100; H(38) = 116; H(39) = 68;  H(40) = 84
     H(41) = 165; H(42) = 181; H(43) = 133; H(44) = 149; H(45) = 229
     H(46) = 245; H(47) = 197; H(48) = 213; H(49) = 54;  H(50) = 38
     H(51) = 22;  H(52) = 6;   H(53) = 118; H(54) = 102; H(55) = 86
     H(56) = 70;  H(57) = 183; H(58) = 167; H(59) = 151; H(60) = 135
     H(61) = 247; H(62) = 231; H(63) = 215; H(64) = 199; H(65) = 72
     H(66) = 88;  H(67) = 104; H(68) = 120; H(69) = 8;   H(70) = 24
     H(71) = 40;  H(72) = 56;  H(73) = 201; H(74) = 217; H(75) = 233
     H(76) = 249; H(77) = 137; H(78) = 153; H(79) = 169; H(80) = 185
     H(81) = 90;  H(82) = 74;  H(83) = 122; H(84) = 106; H(85) = 26
     H(86) = 10;  H(87) = 58;  H(88) = 42;  H(89) = 219; H(90) = 203
     H(91) = 251; H(92) = 235; H(93) = 155; H(94) = 139; H(95) = 187
     H(96) = 171; H(97) = 108; H(98) = 124; H(99) = 76;  H(100) = 92
     H(101) = 44; H(102) = 60; H(103) = 12; H(104) = 28; H(105) = 237
     H(106) = 253;H(107) = 205;H(108) = 221;H(109) = 173;H(110) = 189
     H(111) = 141;H(112) = 157;H(113) = 126;H(114) = 110;H(115) = 94
     H(116) = 78; H(117) = 62; H(118) = 46; H(119) = 30; H(120) = 14
     H(121) = 255;H(122) = 239;H(123) = 223;H(124) = 207;H(125) = 191
     H(126) = 175;H(127) = 159;H(128) = 143;H(129) = 145;H(130) = 129
     H(131) = 177;H(132) = 161;H(133) = 209;H(134) = 193;H(135) = 241
     H(136) = 225;H(137) = 16; H(138) = 0;  H(139) = 48; H(140) = 32
     H(141) = 80; H(142) = 64; H(143) = 112;H(144) = 96; H(145) = 131
     H(146) = 147;H(147) = 163;H(148) = 179;H(149) = 195;H(150) = 211
     H(151) = 227;H(152) = 243;H(153) = 2;  H(154) = 18; H(155) = 34
     H(156) = 50; H(157) = 66; H(158) = 82; H(159) = 98; H(160) = 114
     H(161) = 181;H(162) = 165;H(163) = 149;H(164) = 133;H(165) = 245
     H(166) = 229;H(167) = 213;H(168) = 197;H(169) = 52; H(170) = 36
     H(171) = 20; H(172) = 4;  H(173) = 116;H(174) = 100;H(175) = 84
     H(176) = 68; H(177) = 167;H(178) = 183;H(179) = 135;H(180) = 151
     H(181) = 231;H(182) = 247;H(183) = 199;H(184) = 215;H(185) = 38
     H(186) = 54; H(187) = 6;  H(188) = 22; H(189) = 102;H(190) = 118
     H(191) = 70; H(192) = 86; H(193) = 217;H(194) = 201;H(195) = 249
     H(196) = 233;H(197) = 153;H(198) = 137;H(199) = 185;H(200) = 169
     H(201) = 88; H(202) = 72; H(203) = 120;H(204) = 104;H(205) = 24
     H(206) = 8;  H(207) = 56; H(208) = 40; H(209) = 203;H(210) = 219
     H(211) = 235;H(212) = 251;H(213) = 139;H(214) = 155;H(215) = 171
     H(216) = 187;H(217) = 74; H(218) = 90; H(219) = 106;H(220) = 122
     H(221) = 10; H(222) = 26; H(223) = 42; H(224) = 58; H(225) = 253
     H(226) = 237;H(227) = 221;H(228) = 205;H(229) = 189;H(230) = 173
     H(231) = 157;H(232) = 141;H(233) = 124;H(234) = 108;H(235) = 92
     H(236) = 76; H(237) = 60; H(238) = 44; H(239) = 28; H(240) = 12
     H(241) = 239;H(242) = 255;H(243) = 207;H(244) = 223;H(245) = 175
     H(246) = 191;H(247) = 143;H(248) = 159;H(249) = 110;H(250) = 126
     H(251) = 78; H(252) = 94; H(253) = 46; H(254) = 62; H(255) = 14
     H(256) = 30
     *
     * 'L'ow byte values!
     L(1) = 0;     L(2) = 33;    L(3) = 66;    L(4) = 99;    L(5) = 132
     L(6) = 165;   L(7) = 198;   L(8) = 231;   L(9) = 8;     L(10) = 41
     L(11) = 74;   L(12) = 107;  L(13) = 140;  L(14) = 173;  L(15) = 206
     L(16) = 239;  L(17) = 49;   L(18) = 16;   L(19) = 115;  L(20) = 82
     L(21) = 181;  L(22) = 148;  L(23) = 247;  L(24) = 214;  L(25) = 57
     L(26) = 24;   L(27) = 123;  L(28) = 90;   L(29) = 189;  L(30) = 156
     L(31) = 255;  L(32) = 222;  L(33) = 98;   L(34) = 67;   L(35) = 32
     L(36) = 1;    L(37) = 230;  L(38) = 199;  L(39) = 164;  L(40) = 133
     L(41) = 106;  L(42) = 75;   L(43) = 40;   L(44) = 9;    L(45) = 238
     L(46) = 207;  L(47) = 172;  L(48) = 141;  L(49) = 83;   L(50) = 114
     L(51) = 17;   L(52) = 48;   L(53) = 215;  L(54) = 246;  L(55) = 149
     L(56) = 180;  L(57) = 91;   L(58) = 122;  L(59) = 25;   L(60) = 56
     L(61) = 223;  L(62) = 254;  L(63) = 157;  L(64) = 188;  L(65) = 196
     L(66) = 229;  L(67) = 134;  L(68) = 167;  L(69) = 64;   L(70) = 97
     L(71) = 2;    L(72) = 35;   L(73) = 204;  L(74) = 237;  L(75) = 142
     L(76) = 175;  L(77) = 72;   L(78) = 105;  L(79) = 10;   L(80) = 43
     L(81) = 245;  L(82) = 212;  L(83) = 183;  L(84) = 150;  L(85) = 113
     L(86) = 80;   L(87) = 51;   L(88) = 18;   L(89) = 253;  L(90) = 220
     L(91) = 191;  L(92) = 158;  L(93) = 121;  L(94) = 88;   L(95) = 59
     L(96) = 26;   L(97) = 166;  L(98) = 135;  L(99) = 228;  L(100) = 197
     L(101) = 34;  L(102) = 3;   L(103) = 96;  L(104) = 65;  L(105) = 174
     L(106) = 143; L(107) = 236; L(108) = 205; L(109) = 42;  L(110) = 11
     L(111) = 104; L(112) = 73;  L(113) = 151; L(114) = 182; L(115) = 213
     L(116) = 244; L(117) = 19;  L(118) = 50;  L(119) = 81;  L(120) = 112
     L(121) = 159; L(122) = 190; L(123) = 221; L(124) = 252; L(125) = 27
     L(126) = 58;  L(127) = 89;  L(128) = 120; L(129) = 136; L(130) = 169
     L(131) = 202; L(132) = 235; L(133) = 12;  L(134) = 45;  L(135) = 78
     L(136) = 111; L(137) = 128; L(138) = 161; L(139) = 194; L(140) = 227
     L(141) = 4;   L(142) = 37;  L(143) = 70;  L(144) = 103; L(145) = 185
     L(146) = 152; L(147) = 251; L(148) = 218; L(149) = 61;  L(150) = 28
     L(151) = 127; L(152) = 94;  L(153) = 177; L(154) = 144; L(155) = 243
     L(156) = 210; L(157) = 53;  L(158) = 20;  L(159) = 119; L(160) = 86
     L(161) = 234; L(162) = 203; L(163) = 168; L(164) = 137; L(165) = 110
     L(166) = 79;  L(167) = 44;  L(168) = 13;  L(169) = 226; L(170) = 195
     L(171) = 160; L(172) = 129; L(173) = 102; L(174) = 71;  L(175) = 36
     L(176) = 5;   L(177) = 219; L(178) = 250; L(179) = 153; L(180) = 184
     L(181) = 95;  L(182) = 126; L(183) = 29;  L(184) = 60;  L(185) = 211
     L(186) = 242; L(187) = 145; L(188) = 176; L(189) = 87;  L(190) = 118
     L(191) = 21;  L(192) = 52;  L(193) = 76;  L(194) = 109; L(195) = 14
     L(196) = 47;  L(197) = 200; L(198) = 233; L(199) = 138; L(200) = 171
     L(201) = 68;  L(202) = 101; L(203) = 6;   L(204) = 39;  L(205) = 192
     L(206) = 225; L(207) = 130; L(208) = 163; L(209) = 125; L(210) = 92
     L(211) = 63;  L(212) = 30;  L(213) = 249; L(214) = 216; L(215) = 187
     L(216) = 154; L(217) = 117; L(218) = 84;  L(219) = 55;  L(220) = 22
     L(221) = 241; L(222) = 208; L(223) = 179; L(224) = 146; L(225) = 46
     L(226) = 15;  L(227) = 108; L(228) = 77;  L(229) = 170; L(230) = 139
     L(231) = 232; L(232) = 201; L(233) = 38;  L(234) = 7;   L(235) = 100
     L(236) = 69;  L(237) = 162; L(238) = 131; L(239) = 224; L(240) = 193
     L(241) = 31;  L(242) = 62;  L(243) = 93;  L(244) = 124; L(245) = 155
     L(246) = 186; L(247) = 217; L(248) = 248; L(249) = 23;  L(250) = 54
     L(251) = 85;  L(252) = 116; L(253) = 147; L(254) = 178; L(255) = 209
     L(256) = 240
     RETURN
*
* ******************************************** *
* Generate the CCITT 16 bit CRC for the string *
* passed in 'SVAL'. The result is compatible   *
* with the uniVerse CHECKSUM() function.       *
* Return the result as a HEX value in 'CRC'    *
* ******************************************** *
2000*
     HI = 0; LOW = 0
     LGTH = LEN(SVAL)
     FOR I = 1 TO LGTH
        PTR = BITXOR(SEQ(SVAL[I, 1]), HI) + 1
        HI  = BITXOR(LOW, H(PTR))
        LOW = L(PTR)
     NEXT I
     CRC = OCONV((HI * 256) + LOW, "MCDX") "R%4"
     RETURN
*
     END
