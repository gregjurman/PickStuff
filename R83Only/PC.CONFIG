* *************************************************** *
* *************************************************** *
* PC.CONFIG     (PC/R83 only)        (dmm)            *
*                                                     *
* Show brief details on current system configuration  *
* and space available. Adapted from FDISK ..etc       *
* *************************************************** *
* *************************************************** *
     *
     EQU VM TO CHAR(253), AM TO CHAR(254), TRUE TO 1, FALSE TO 0
     EQU ACTIVE TO "80" ; EQU UNUSED TO "00"
     *
     EQU DISKS     TO "U313E"   ;* Get Cylns, Heads, & Sects of drive
     EQU MFDBR     TO "U613B"   ;* Read or Write a portion of the MFDBR.
     EQU READ.MEMR TO "UB0BA"   ;* read memory byte
     EQU WRIT.MEMR TO "UC0BA"   ;* write memory byte
     *
     DIM ADPTR.ADDR(2, 3)
     *
     PROMPT ''
     ADPTR.ADDR(1,1) = "B000"   ;* Mono seg addr
     ADPTR.ADDR(1,2) = "0FFF"   ;* Last RAM on mono card
     ADPTR.ADDR(1,3) = "MONO"   ;* Adaptor name
     ADPTR.ADDR(2,1) = "B800"   ;* Colour card seg addr
     ADPTR.ADDR(2,2) = "3FFF"   ;* Last RAM on colour card
     ADPTR.ADDR(2,3) = "COLOUR" ;* Adaptor name
     *
     OSCODES = ""
     OSCODES<1,1> = "01"; OSCODES<1,2> = "DOS    "
     OSCODES<2,1> = "04"; OSCODES<2,2> = "DOS    "
     OSCODES<3,1> = "05"; OSCODES<3,2> = "DOS    "
     OSCODES<4,1> = "40"; OSCODES<4,2> = "R83    "
     OSCODES<5,1> = "50"; OSCODES<5,2> = "EAGLE  "
     OSCODES<6,1> = "60"; OSCODES<6,2> = "OA 1.3 "
     OSCODES<7,1> = "62"; OSCODES<7,2> = "OA 2.0 "
     OSCODES<8,1> = "XX"; OSCODES<8,2> = "UNKNOWN"
     *
     BGS = @(-1):@(-7)
     BGS = BGS:@(20,01):"*** SYSTEM CONFIGURATION DETAILS ***"
     BGS = BGS:@(09,03):"Revision   :"
     BGS = BGS:@(09,05):"No Lines   :":@(42):"<< Space Utilisation >>"
     BGS = BGS:@(09,06):"CRT Adaptor:"
     BGS = BGS:@(09,07):"Memory     :":@(49):"Frames         Bytes"
     BGS = BGS:@(33,08):"ABS area"
     BGS = BGS:@(33,09):"System area"
     BGS = BGS:@(07,10):"<< Fixed Disks >>":@(33):"File area"
     BGS = BGS:@(33,11):"Unused (Free)"
     BGS = BGS:@(09,12):"No. Drives":@(48):"-------   -----------"
     BGS = BGS:@(38,13):"TOTAL"
     BGS = BGS:@(09,14):"Drv Part    Cyls    Mbytes"
     BGS = BGS:@(56,15):"Largest block"
     BGS = BGS:@(56,16):"is:"
     BGS = BGS:@(-8)
     *
     EXECUTE 'WHAT (WLS)' CAPTURING STUFF
     STUFF = TRIM(STUFF<3>)
     *
     CORE       = FIELD(STUFF,' ',1)
     LINES      = FIELD(STUFF,' ',2)
     PCB0       = FIELD(STUFF,' ',3)
     SYSBASE    = FIELD(STUFF,' ',6)
     MAXFID     = FIELD(STUFF,' ',9)
     OVERFLOW   = FIELD(STUFF,' ',10)
     *
     ABS.AREA    = PCB0 "R#8" : PCB0 * 512 "R,#14"
     SYSTEM.DATA = (SYSBASE - PCB0)"R#8" : (SYSBASE - PCB0) * 512 "R,#14"
     USER.DATA   = (MAXFID - OVERFLOW - SYSBASE)"R#8" : (MAXFID - OVERFLOW - SYSBASE) * 512 "R,#14"
     SPARE.DATA  = OVERFLOW "R#8" : OVERFLOW * 512 "R,#14"
     TOTAL.DATA  = MAXFID "R#9" : MAXFID * 512 "R,#14"
     GOSUB 1000
*
*--- Display configuration detail
*
     BUFFER = BGS:@(21,3):SYSTEM(100):@(21,5):LINES:@(21,6):ADAPTOR
     BUFFER = BUFFER:@(21,7):CORE:@(20,12):NO.DISKS
     BUFFER = BUFFER:@(47,08):ABS.AREA:@(47,09):SYSTEM.DATA:@(47,10):USER.DATA
     BUFFER = BUFFER:@(47,11):SPARE.DATA:@(46,13):TOTAL.DATA:@(59,16):BIGGEST"R#10"
     NO.PARTITIONS = DCOUNT(TYPE.TOTALS<1>,VM)
     FOR I = 1 TO NO.PARTITIONS
        YPOS = 14 + I
        PART.SIZE = TYPE.TOTALS<4,I>
        TOTAL.MB = TOTAL.MB + PART.SIZE
        BUFFER=BUFFER:@(09,YPOS):TYPE.TOTALS<1,I>:'  ':TYPE.TOTALS<2,I>
        BUFFER=BUFFER:TYPE.TOTALS<3,I>"R#6":PART.SIZE"R#10"
        BUFFER=BUFFER:TYPE.TOTALS<5,I>
     NEXT I
     BUFFER = BUFFER:@(14,YPOS+2):' TOTAL MB =':TOTAL.MB"R#10"
     BUFFER = BUFFER:@(09,YPOS+4):"RETURN to continue:"
     CRT BUFFER:
     INPUT REPLY,1
     EXECUTE 'READ.CMOS'   ;* Show CMOS information
     STOP
*
*--- Find largest block of contig. space
*
1000 EXECUTE 'POVF' CAPTURING STUFF
     INDX = 1
     BIGGEST = 0
     LOOP
        INDX = INDX + 1
        LINE = TRIM(STUFF<INDX>)
     UNTIL LINE = '' DO
        BLK1 = TRIM(OCONV(LINE,'G1:1'))
        BLK1 = OCONV(BLK1,'G0 1')
        BLK2 = TRIM(OCONV(LINE,'G2:1'))
        IF BLK1 > BIGGEST THEN BIGGEST = BLK1
        IF BLK2 > BIGGEST THEN BIGGEST = BLK2
     REPEAT
*
*--- Determine what graphics adaptor is installed
*
     FOUND = FALSE
     ADAPTOR = 'UNKNOWN'
     FOR INDX = 1 TO 2 UNTIL FOUND
        SEG = ADPTR.ADDR(INDX,1)
        OFS = ADPTR.ADDR(INDX,2)
        CARD.EXISTS = TRUE                    ;* initial assumption
        FOR I = 41 TO 43 WHILE CARD.EXISTS    ;* Read/write A, B, C
           DA = SEG
           DA<2> = OFS
           DA<3> = I
           DAT = OCONV(DA,WRIT.MEMR)
           DA = SEG
           DA<2> = OFS
           DA<3> = "FF"
           DAT = OCONV(DA,READ.MEMR)<3>
           CARD.EXISTS = (I = DAT)            ;* Was this what was written
        NEXT I
        IF CARD.EXISTS THEN
           ADAPTOR = ADPTR.ADDR(INDX,3)       ;* Adaptor name
           FOUND = TRUE                       ;* Look no more!
        END
     NEXT INDX
*
*--- Get fixed disk info
*
     YNDX = 0
     NO.DISKS = 0
     TOTAL.MB = 0
     TYPE.TOTALS = ''
     CONFIG = ICONV("0",DISKS)
     IF (CONFIG<1> # "0") THEN RETURN
     CONFIG = ICONV("1",DISKS)
     IF (CONFIG<1> # "0") THEN NUM.DSK = 0 ELSE NUM.DSK = 1
     FOR DSK.NUM = 0 TO NUM.DSK
        CONFIG = ICONV(DSK.NUM,DISKS)
        HEADS = OCONV(CONFIG<3>,"MCXD")
        SECTS = OCONV(CONFIG<4>,"MCXD")
        DA = 'R' ; DA<1,2> = DSK.NUM ; DA<1,8> = 0
        DA = ICONV(DA,MFDBR)                  ;* Read partition info
        FOR PAR.NUM = 3 TO 6
           IF (DA<1,PAR.NUM,5> # UNUSED) THEN
              IF DA<1,PAR.NUM,1> = ACTIVE THEN
                 STATUS = "A"
              END ELSE STATUS = "N"
              INDEX = 1
              PART = DA<1,PAR.NUM,5>
              LOOP WHILE OSCODES<INDEX,1> # PART AND OSCODES<INDEX,1> # "XX" DO
                 INDEX = INDEX + 1
              REPEAT
              YNDX = YNDX + 1
              TYPE = OSCODES<INDEX,2>
              SCYL = OCONV(DA<1,PAR.NUM,4>,"MCXD")
              ECYL = OCONV(DA<1,PAR.NUM,8>,"MCXD")
              PCYL = ECYL - SCYL + 1
              SIZE = ICONV(PCYL * HEADS * SECTS / 2048,'MD3')
              TYPE.TOTALS<1,YNDX> = DSK.NUM"R#2"
              TYPE.TOTALS<2,YNDX> = TYPE"L#6"
              TYPE.TOTALS<3,YNDX> = PCYL
              TYPE.TOTALS<4,YNDX> = OCONV(SIZE,'MD3')
              IF DA<1,PAR.NUM,1> = ACTIVE THEN
                 TYPE.TOTALS<5,YNDX> = '  <-- Active'
              END
           END
        NEXT PAR.NUM
        NO.DISKS = NO.DISKS + 1
     NEXT DSK.NUM
     RETURN
*
     END
