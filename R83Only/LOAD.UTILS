********************************************************************
********************************************************************
* LOAD.UTILS                                   (PC/R83 Only!!)     *
* Program to add some simple utility functions into R83 base code. *
* This code is placed in ABS frames where there is spare space. No *
* system code is destroyed. Note that after running this program,  *
* the system will NOT verify for frames:  468, 276, 282     (dmm)  *
********************************************************************
********************************************************************
*
EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)
*
OPLIST = OCONV(SYSTEM(15), 'MCU') ;* Option letters
UNLOAD = INDEX(OPLIST, 'U', 1)    ;* True if 'unloading' utils!
*
IF NOT(INDEX(SYSTEM(100), '3.1', 1)) THEN
   CRT 'Abort! - Can only run on R83 ver: 3.1'
   STOP
END
*
OPEN '','MD'     TO F.MD     ELSE STOP 201,'ERRMSG'
OPEN '','ERRMSG' TO F.ERRMSG ELSE STOP 201,'ERRMSG'
READ F FROM F.MD,'MLOAD' ELSE
   WRITE 'P':AM:2:AM:'001F' ON F.MD,'MLOAD'
END
READ F FROM F.MD,'MAKE-SO' ELSE
   WRITE 'P':AM:2:AM:'013F':AM:AM:'F' ON F.MD,'MAKE-SO'
END
READ F FROM F.MD,'MVERIFY' ELSE
   WRITE 'P':AM:2:AM:'101F' ON F.MD,'MVERIFY'
END
*
* Add entry points into frame 468
*
*  5 = AP like 'convert()' function. NEW = OCONV(DATA, 'U51D4')
*   Where: NEW  = result of conversion operation
*          DATA = delim:A:delim:B:delim:C 
*             delim = Single Delimiter Character
*                 A = 1 or more 'old' characters
*                 B = 0 or more 'new' chars
*                 C = string in which to do convert 
*
*  6 = uniVerse checksum for string. CRC = OCONV(STRING, 'U61D4')
*
*  7 = Unidata checksum for string.  CRC = OCONV(STRING, 'U71D4')
*
*  8 = swap string function.         NEW = OCONV(DATA, 'U81D4')
*   Where: NEW  = result of swap string operation
*          DATA = delim:A:delim:B:delim:C 
*             delim = Single Delimiter Character
*                 A = 'old' string to be replaced
*                 B = 'new' string to swap for 'A'
*                 C = string in which to do swap
*
*  9 = long input function.         DATA = OCONV(LENGTH, 'U91D4')
*   Where: DATA  = returned data, input by user
*         LENGTH = option number of chars to return. If null or zero
*                  then set to 32255
*
FID = 468; PNAME = 'UTIL1'
IF UNLOAD THEN
   GOSUB 2000 ;* Unload patch
END ELSE
   F     = SVM:'0001 7FF001D4'
   F<-1> = SVM:'0011 E95202E9E803E9CA04E9B905E94707'
   F<-1> = SVM:'0220 9AD84F00009A491E0000C43E680126C605FF81CD00209AD84F00009A'
   F<-1> = SVM:'0238 4F00009AF91D00008B166C01A16801F6C280750383E80B86E0A3E200'
   F<-1> = SVM:'0250 E0A3E2008916E400A16E01A3E600B85A10EA091500009AD84F0000BE'
   F<-1> = SVM:'0268 4F0000BEDC009A0C1D00009A491E0000C43E6801268A05A205002680'
   F<-1> = SVM:'0280 050026803DFF74AEA112018EC08B166C01A16801F6C280750383E80B'
   F<-1> = SVM:'0298 0383E80B86E026A3A400268916A600A16E0126A3A80081CD0400BF68'
   F<-1> = SVM:'02B0 0400BF6801B0C19A4F160000EBF4C43E680126803DFF7503E9240126'
   F<-1> = SVM:'02C8 E9240126C605FF81CD0020A112018EC08B166C01A16801F6C2807503'
   F<-1> = SVM:'02E0 C280750383E80B86E026A3AA00268916AC00A16E0126A3AE0081CD04'
   F<-1> = SVM:'02F8 0081CD0400BF6801B0C19A4F160000EBF4C43E680126803DFF7503E9'
   F<-1> = SVM:'0310 FF7503E9D90026C605FF81CD00208B166C01A16801F6C280750383E8'
   F<-1> = SVM:'0328 750383E80B86E0A3DC008916DE00A16E01A3E0009AD84F00009A491E'
   F<-1> = SVM:'0340 009A491E0000C43E680126803DFF7503E9E3FE268A05A20500A11201'
   F<-1> = SVM:'0358 00A112018ED8BEA4009A1E1D0000BF7001B0C19A4F160000EBF4C43E'
   F<-1> = SVM:'0370 EBF4C43E700126803DFF74C0A112018ED8BEAA009A301D0000A11201'
   F<-1> = SVM:'0388 00A112018EC0BFA400BE70019A831D0000BF7801B0C09A58160000EB'
   F<-1> = SVM:'03A0 160000EBF4C43E780126803DFF7410C5366801268A05880481CD0020'
   F<-1> = SVM:'03B8 81CD0020E97DFF9AD84F0000BF68019A121B00009AF91D0000BF6801'
   F<-1> = SVM:'03D0 00BF68019A231B0000B0C0BE7001BF780181CD00809A40160000EBED'
   F<-1> = SVM:'03E8 0000EBEDE94DFF9AD84F0000BEDC009A0C1D0000E921FE9AD84F0000'
   F<-1> = SVM:'0400 D84F0000BEDC009A0C1D00008EC3BA0F00BF00019A271B00008EC3BA'
   F<-1> = SVM:'0418 008EC3BA0E00BF00019A161B000031C0A30E009AD84F00009A491E00'
   F<-1> = SVM:'0430 9A491E0000C43E680126803DFF746CC5367001268A05300481CD0040'
   F<-1> = SVM:'0448 81CD00408EDBC6060D00089AD84F0000802E0D00017CCCF6060E0080'
   F<-1> = SVM:'0460 060E008075148B0E0E0086E9A10E0086E001C886E0A30E00EBD99AD8'
   F<-1> = SVM:'0478 EBD99AD84F00008B0E0E0086E9A10E0086E001C886E0A30E00C43E78'
   F<-1> = SVM:'0490 00C43E78012680352181CD0080C43E70012680351081CD0040EBA89A'
   F<-1> = SVM:'04A8 40EBA89AD84F0000BEDC009A0C1D000031C0A30C00A10C00A30C00A1'
   F<-1> = SVM:'04C0 A30C00A10E00A30E00BF68019A231B0000B808009A03150000BF7801'
   F<-1> = SVM:'04D8 00BF78019A011B0000E93CFD9AD84F0000A112018ED831C0A35400A3'
   F<-1> = SVM:'04F0 A35400A35600A3580081CD04008EDB31C0A39200BEDC009A0C1D0000'
   F<-1> = SVM:'0508 0C1D000031C0A30A009AD84F00009A491E0000C43E680126803DFF74'
   F<-1> = SVM:'0520 803DFF746AA1920086E04086E0A3920031C0A30C00A30E00268A05A2'
   F<-1> = SVM:'0538 268A05A20F00A1920086E09AC01F0000A112018EC0268B0E580086E9'
   F<-1> = SVM:'0550 580086E9A10E0086E001C886E026A35800268B0E560086E9A10C0086'
   F<-1> = SVM:'0568 A10C0086E011C886E026A35600268B0E540086E9A10A0086E011C886'
   F<-1> = SVM:'0580 E011C886E026A3540081CD0400EB829AD84F0000BEDC009A0C1D0000'
   F<-1> = SVM:'0598 0C1D000080260A007FA112018EC026A15400A30A0026A15600A30C00'
   F<-1> = SVM:'05B0 00A30C0026A15800A30E00BF68019A231B0000B808F09A03150000BF'
   F<-1> = SVM:'05C8 150000BF78019A011B0000E94AFC9AD84F0000BEDC009A0C1D00009A'
   F<-1> = SVM:'05E0 1D00009A491E0000C43E6801268A05A2050026803DFF7503E93BFCA1'
   F<-1> = SVM:'05F8 E93BFCA112018EC08B166C01A16801F6C280750383E80B86E026A3A4'
   F<-1> = SVM:'0610 E026A3A400268916A600A16E0126A3A80081CD0400B815079A001500'
   F<-1> = SVM:'0628 9A00150000C43E680126803DFF7503E9B5FDA112018EC0A10E0026A3'
   F<-1> = SVM:'0640 0E0026A31C0081CD0400C43E680126C605FF81CD0020A112018EC08B'
   F<-1> = SVM:'0658 018EC08B166C01A16801F6C280750383E80B86E026A3AA00268916AC'
   F<-1> = SVM:'0670 268916AC00A16E0126A3AE00B815079A00150000C43E680126803DFF'
   F<-1> = SVM:'0688 26803DFF7503E95EFDA112018EC0A10E0026A31E0081CD0400C43E68'
   F<-1> = SVM:'06A0 00C43E680126C605FF81CD0020A112018EC08B166C01A16801F6C280'
   F<-1> = SVM:'06B8 01F6C280750383E80B86E026A3B000268916B200A16E0126A3B400C6'
   F<-1> = SVM:'06D0 A3B400C6060500FFB815079A00150000A112018EC0A10E0026A32000'
   F<-1> = SVM:'06E8 26A3200081CD0400B814219A03150000A112018EC026A1B000A3DC00'
   F<-1> = SVM:'0700 00A3DC0026A1B200A3DE0026A1B400A3E000E921FB9AD84F0000A112'
   F<-1> = SVM:'0718 0000A112018EC08B166C01A16801F6C280750383E80B86E026A3B600'
   F<-1> = SVM:'0730 26A3B600268916B800A16E0126A3BA0081CD0400C7060E000001BF68'
   F<-1> = SVM:'0748 0001BF6801B0C19A55160000EBF4A10E0086E0F7D886E0A30E00EA06'
   F<-1> = SVM:'0760 0E00EA061500009AD84F0000BEDC009A1E1D0000BF70019A231B0000'
   F<-1> = SVM:'0778 231B0000B808409A03150000A10E0086E00500007F06C7060E007DFF'
   F<-1> = SVM:'0790 0E007DFF9AD84F0000B806509A03150000C43E780126C605FF81CD00'
   F<-1> = SVM:'07A8 FF81CD0080BF78019A011B0000E97EFA'
   *
   GOSUB 1000 ;* load patch!
END
*
* Add code into frame 276
*
*  No new entry points here. This is remainder of 'swap' logic!
*
FID = 276; PNAME = 'UTIL2'
IF UNLOAD THEN
   GOSUB 2000 ;* Unload patch
END ELSE
   F     = SVM:'0001 7FF00114'
   F<-1> = SVM:'0008 E95F03'
   F<-1> = SVM:'0360 9AD84F0000EA061500009AD84F0000A112018EC026A11C0086E00500'
   F<-1> = SVM:'0378 86E00500007EE126A1200086E00500007ED626A11C0086E0268B1620'
   F<-1> = SVM:'0390 268B16200086F239D07FC5A112018ED8BEA4009A1E1D0000A112018E'
   F<-1> = SVM:'03A8 A112018ED8BEAA009A301D0000A112018EC08B166C01A16801F6C280'
   F<-1> = SVM:'03C0 01F6C280750383E80B86E026A354002689165600A16E0126A3580081'
   F<-1> = SVM:'03D8 A3580081CD0400A112018ED8BEB0009A0C1D00009A4E1E0000C43E70'
   F<-1> = SVM:'03F0 00C43E7001268A05A205009AD84F0000A112018EC026A11C0086E03D'
   F<-1> = SVM:'0408 0086E03D01007F4A26A11C0086E0268B161E0086F239D075399A531E'
   F<-1> = SVM:'0420 399A531E0000C43E7801268A05A209009AD84F0000BF6801B0C19A4F'
   F<-1> = SVM:'0438 B0C19A4F160000EBF4C43E680126803DFF7503E912FFA00900268805'
   F<-1> = SVM:'0450 0026880581CD0020EBD69AD84F0000A112018ED8A11E0086E09A121E'
   F<-1> = SVM:'0468 E09A121E0000A112018EC08B167C01A17801F6C280750383E80B86E0'
   F<-1> = SVM:'0480 E80B86E026A3B600268916B800A17E0126A3BA0081CD0400A112018E'
   F<-1> = SVM:'0498 A112018ED8BEA4009A301D00009A531E0000A112018EC08B167C01A1'
   F<-1> = SVM:'04B0 167C01A17801F6C280750383E80B86E026A3A400268916A600A17E01'
   F<-1> = SVM:'04C8 00A17E0126A3A80081CD040026A11E0086E0268B161C0086F239D07E'
   F<-1> = SVM:'04E0 F239D07E03E9E20026A11C0086E0268B0E1E0086E929C886E026A31C'
   F<-1> = SVM:'04F8 E026A31C009AD84F0000BF6801B0C19A4F160000EBF4C43E68012680'
   F<-1> = SVM:'0510 680126803DFF7503E945FEA112018ED8BEA4009A1E1D0000BF68019A'
   F<-1> = SVM:'0528 BF68019A231B0000B0FFBE7001BF78019A801D0000EBF1720CC43E70'
   F<-1> = SVM:'0540 0CC43E700126803DFF7402EBB09AD84F00009AF91D0000A112018ED8'
   F<-1> = SVM:'0558 12018ED8BEAA009A1E1D0000A112018ED8BEB6009A301D0000BE7001'
   F<-1> = SVM:'0570 00BE7001BF680181CD00209A46160000EBEFA112018EC026A11C0086'
   F<-1> = SVM:'0588 A11C0086E00500007503E968FFBF68019A231B0000BF78019A121B00'
   F<-1> = SVM:'05A0 9A121B0000A112018ED8A11C0086E09A121E0000B0C0BE7801BF7001'
   F<-1> = SVM:'05B8 01BF700181CD00409A40160000EBEDE933FF9AD84F0000A112018ED8'
   F<-1> = SVM:'05D0 12018ED8A1B000A36000A1B200A36200A1B400A3640081CD04009AD8'
   F<-1> = SVM:'05E8 04009AD84F0000A112018ED8BE54009A301D0000A112018ED8A11E00'
   F<-1> = SVM:'0600 D8A11E0086E09A121E0000A112018EC08B167C01A17801F6C2807503'
   F<-1> = SVM:'0618 C280750383E80B86E026A354002689165600A17E0126A3580081CD04'
   F<-1> = SVM:'0630 0081CD04009AD84F0000BF6801B0C19A4F160000EBF4C43E68012680'
   F<-1> = SVM:'0648 680126803DFF7503E90DFDA112018ED8BEA4009A1E1D0000BF68019A'
   F<-1> = SVM:'0660 BF68019A231B0000B0FFBE7001BF78019A801D0000EBF1720CC43E70'
   F<-1> = SVM:'0678 0CC43E700126803DFF7402EBB09AD84F0000A112018EC08B167C01A1'
   F<-1> = SVM:'0690 167C01A17801F6C280750383E80B86E026A35A002689165C00A17E01'
   F<-1> = SVM:'06A8 00A17E0126A35E0081CD04009AF91D0000BF68019A231B0000A11201'
   F<-1> = SVM:'06C0 00A112018ED8BE54009A0C1D0000A112018ED8BEB0009A1E1D0000BE'
   F<-1> = SVM:'06D8 1D0000BE7001BF680181CD00209A46160000EBEFA112018ED8BEAA00'
   F<-1> = SVM:'06F0 D8BEAA009A1E1D0000A112018ED8BEB6009A301D0000BE7001BF6801'
   F<-1> = SVM:'0708 01BF680181CD00209A46160000EBEFA112018ED8BE5A009A301D0000'
   F<-1> = SVM:'0720 301D00009A0D1E0000BF68019A121B0000B0C0BE7801BF700181CD00'
   F<-1> = SVM:'0738 0181CD00409A40160000EBEDA112018ED8A15400A3B000A15600A3B2'
   F<-1> = SVM:'0750 5600A3B200A15800A3B40081CD04008EC3268B16740126A17001F6C2'
   F<-1> = SVM:'0768 7001F6C280750383E80B86E0A354008916560026A17601A35800A1B4'
   F<-1> = SVM:'0780 5800A1B4003B0664007510A1B2003B0662007507A1B0003B06600075'
   F<-1> = SVM:'0798 0660007503E94AFEA16000A35400A16200A35600A16400A35800E980'
   F<-1> = SVM:'07B0 5800E980FE'
   *
   GOSUB 1000 ;* load patch!
END
*
* Add entry points into frame 282
*
*  3 = READ.FRM -  Read A Frame From Disc
*
*       frame.data = OCONV(fid,'U311A')
*
*       where: fid         = frame number to read
*              user.exit   = the user exit where this frame is loaded
*              frame.data  = returned data with the format:
*                            Attr<1> = frame image in hex
*                            Attr<2> = frame image in ascii
*                            Note: System delimiters are converted to
*                            [,\,],^,_ characters, and non-displayable
*                            chars are converted to dots in the ascii
*                            frame image. Note that port 0 is assumed to
*                            be a PC monitor, so can display more chars!
*                            Returned as null if 'fid' is invalid.
*
*  4 = WRIT.FRM -  Write A Frame Back To Disc
*
*       error.flg = OCONV(frame.data,'U411A')
*
*       where: frame.data  = data for frame update, in format:
*                            Attr<1> = frame number to write (fid)
*                            Attr<2> = frame image in hex
*
*              error.flg   = 0 if no error, write was ok
*                            1 if error. Bad 'fid' or item format
*
*  5 = RUN.TOT  -  Generate 'Running-Total' For Access. Used as a
*                  conversion code (attr 7) in dict item.
*
*  6 = LAST.VAL -  Return last NON-NULL value from passed string.
*                  Can be called from ACCESS or from BASIC.
*
FID = 282; PNAME = 'UTIL3'
IF UNLOAD THEN
   GOSUB 2000 ;* Unload patch
END ELSE
   F     = SVM:'0001 7FF0011A'
   F<-1> = SVM:'000B E96903E9B704E94906E9DA06'
   F<-1> = SVM:'0330 004A8000007F9AD84F00009A491E0000C43E680126C605FF'
   F<-1> = SVM:'0348 81CD00209AF91D00008B166C01A16801F6C280750383E80B'
   F<-1> = SVM:'0360 86E0A3E2008916E400A16E01A3E600B85A10EA091500009A'
   F<-1> = SVM:'0378 D84F0000800E150008B879209A03150000A10C0086E083E8'
   F<-1> = SVM:'0390 007509A10E0009C07502EB0580261500F79AD84F0000B879'
   F<-1> = SVM:'03A8 059A00150000F6061500207581A112018EC026A11C00A392'
   F<-1> = SVM:'03C0 009AD84F0000C6060F0082C43E7001BE680181CD00209A12'
   F<-1> = SVM:'03D8 120000EBEEA1920086E083E80186E0A392007E079A4E1E00'
   F<-1> = SVM:'03F0 00EBCE9AD84F00009A491E0000C43E680126C605FE81CD00'
   F<-1> = SVM:'0408 20BF68019A121B0000BEDC009A0C1D00009AD84F0000C706'
   F<-1> = SVM:'0420 0800000231C0A30A00A30C00A30E00BE6801B0009A0F1200'
   F<-1> = SVM:'0438 00EBF49A4E1E0000C43E7001A00F0026880581CD00402680'
   F<-1> = SVM:'0450 3D20720C26803DFB72382680255FEB119AD84F0000C43E70'
   F<-1> = SVM:'0468 0126C6052E81CD00409AD84F0000A112018EC081CD040026'
   F<-1> = SVM:'0480 A11C0086E083E80186E026A31C007E28EB879AD84F0000F6'
   F<-1> = SVM:'0498 0615000875D3C43E700126803D8072C92680257F81CD0040'
   F<-1> = SVM:'04B0 26803D2072AAEBB99AD84F0000BF70019A011B0000E96EFE'
   F<-1> = SVM:'04C8 9AD84F0000B879059A00150000F6061500207563C43E7801'
   F<-1> = SVM:'04E0 26803DFE7559BF78019A011B00009AD84F0000C706080000'
   F<-1> = SVM:'04F8 0231C0A30A00A30C00A30E00BE6801B0009A0F120000EBF4'
   F<-1> = SVM:'0510 C43E7001A00F0026880581CD0040A112018EC081CD040026'
   F<-1> = SVM:'0528 A11C0086E083E80186E026A31C007E209A4E1E0000EBAF9A'
   F<-1> = SVM:'0540 D84F00009A491E0000C43E680126C6053181CD0020E9DEFD'
   F<-1> = SVM:'0558 9AD84F0000BEDC009A0C1D00009A491E0000C43E680126C6'
   F<-1> = SVM:'0570 053081CD0020E9BDFD9AD84F0000800E150020BEDC009A0C'
   F<-1> = SVM:'0588 1D0000BF68019A231B000031C0A30800A30A00A30C00A30E'
   F<-1> = SVM:'05A0 00BE7801B0019A0F120000EBF4A10C0086E083E8007C097F'
   F<-1> = SVM:'05B8 0AA10E0009C07503E99000A10A018ED8BE30039A1E1D0000'
   F<-1> = SVM:'05D0 C43E7001A10C0086E0268B550886F239D07F117C11A10E00'
   F<-1> = SVM:'05E8 86E0268B550A86F239D07602EB5DA112018EC026C7061C00'
   F<-1> = SVM:'0600 020081CD0400C43E7001268B450C86E0998B0E0C0086E939'
   F<-1> = SVM:'0618 D17F0C7C0C8B0E0E0086E939C17202EB0CA112018EC026C7'
   F<-1> = SVM:'0630 061C0008009AD84F000080261500DF800E0C008031C08B0E'
   F<-1> = SVM:'0648 0C008B160E009A241D00009AD84F0000EA061500009AD84F'
   F<-1> = SVM:'0660 0000F606160008751031C0A33800A33A00A33C00800E1600'
   F<-1> = SVM:'0678 089AD84F0000BEDC009A301D0000B808409A031500008B16'
   F<-1> = SVM:'0690 3C0086F2A10E0086E001D086E0A30E008B163A0086F2A10C'
   F<-1> = SVM:'06A8 0086E011D086E0A30C008B16380086F2A10A0086E011D086'
   F<-1> = SVM:'06C0 E0A30A00A10A00A33800A10C00A33A00A10E00A33C00BEDC'
   F<-1> = SVM:'06D8 009A301D0000B808009A03150000BF78019A011B0000E945'
   F<-1> = SVM:'06F0 FC9AD84F0000BEDC009A0C1D00009AD84F0000BF68019A23'
   F<-1> = SVM:'0708 1B00009AD84F00009A491E0000C43E680126803DFF743C26'
   F<-1> = SVM:'0720 803DFC73E69AF91D00008B166C01A16801F6C280750383E8'
   F<-1> = SVM:'0738 0B86E0A3DC008916DE00A16E01A3E000BF6801B0F89A4F16'
   F<-1> = SVM:'0750 0000EBF49AF91D0000EBA39AD84F0000BF78019A011B0000'
   F<-1> = SVM:'0768 E9CBFB'
   *
   GOSUB 1000 ;* load patch!
END
STOP
*
1000* Local function to load patch 'FNAME' into ABS frame 'FID' !
*
LOADED = 1
FNAME = 'FID':FID:'.ORIG'
WRITE F ON F.ERRMSG,PNAME
READV REC FROM F.ERRMSG,FNAME,1 THEN
   ERR = 0 ; RETRY = 0
   LOOP
      EXECUTE 'MVERIFY ERRMSG ':FNAME CAPTURING CAPT
      IF INDEX(CAPT, '[217]', 1) THEN
         LOADED = 0
      END ELSE
         EXECUTE 'MVERIFY ERRMSG ':PNAME CAPTURING CAPT
         ERR = NOT(INDEX(CAPT, '[217]', 1))
         IF NOT(ERR) THEN CRT 'FID ':FID:' functions already loaded!'
      END
   WHILE ERR AND NOT(RETRY) DO
      EXECUTE 'MLOAD ERRMSG ':FNAME
      RETRY = 1 ; ERR = 0
   REPEAT
   IF ERR THEN
      CRT "FID ":FID:" appears to be corrupt! - Try 'unload' or ABS load!"
   END
END ELSE
   HNAME = DTX(FID) "R%4"
   EXECUTE 'MAKE-SO ERRMSG (':FID CAPTURING CRAP
   READ REC FROM F.ERRMSG,HNAME THEN
      WRITE REC ON F.ERRMSG,FNAME
      DELETE F.ERRMSG,HNAME
      LOADED = 0
   END
END
IF NOT(LOADED) THEN
   EXECUTE 'MLOAD ERRMSG ':PNAME
END
RETURN
*
2000* Local function to unload patch 'FNAME' from ABS frame 'FID' !
*
FNAME = 'FID':FID:'.ORIG'
READV F FROM F.ERRMSG,FNAME,1 THEN
   EXECUTE 'MLOAD ERRMSG ':FNAME
END ELSE
   CRT 'Cannot find original image for FID ':FID:' - Functions never loaded?'
END
RETURN
*
END
